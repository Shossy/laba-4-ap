openapi: 3.0.0
info:
  title: LAB_AP
  version: 1.0.0
paths:
  /api/products:
    get:
      summary: Get all products
      tags:
        - Products
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '500':
          description: Server error
  /api/products/create:
    post:
      summary: Create product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      tags:
        - Products
      responses:
        '201':
          description: Created an user
        '400':
          description: Bad request
        '500':
          description: Server error
  /api/products/{product_id}:
    get:
      summary: Get details of a product
      tags:
        - Products
      parameters:
        - name: product_id
          in: path
          description: ID of the product
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A specific product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
          
        '500':
          description: Server error
    put:
      summary: Update product
      tags:
        - Products
      parameters:
        - name: product_id
          in: path
          description: ID of the product
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Product"
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unathorized
        '404':
          description: Product not found
        '500':
          description: Server error
    delete:
        summary: Delete product
        tags:
          - Products
        parameters:
        - name: product_id
          in: path
          description: ID of the product
          required: true
          schema:
            type: integer
        responses:
            '201':
              description: Successfully deleted
            '401':
              description: Unathorized
            '404':
              description: Product not found
            '500':
              description: Server error
        
                
                
#Users
  /api/user:
    get:
      summary: Get current user
      tags:
          - User
      responses:
          '200':
            description: User
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: integer
                    username:
                      type: string
          '401':
            description: Unathorized
          '500':
            description: Server error
    put:
      summary: Update user
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unathorized
        '500':
          description: Server error
  /api/user/login:
    post:
      summary: Login
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: Message of success
        '400':
          description: Bad request
        '401':
          description: Unathorized
        '404':
          description: User not found
        '500':
          description: Server error

  /api/user/register:
    post:
      summary: Create user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      tags:
        - User
      responses:
        '201':
          description: Created an user
        '400':
          description: Bad request
        '500':
          description: Server error
          
  /api/user/logout:
    post:
      summary: Logout
      tags:
        - User
      responses:
        '201':
          description: Successful logout
        '401':
          description: Unathorized
        '500':
          description: Server error
  
  /api/user/delete:
        delete:
          summary: Delete user
          tags:
            - User
          responses:
              '201':
                description: Successfully deleted
              '401':
                description: Unathorized
              '500':
                description: Server error


#Basket
  /api/basket:
    get:
      summary: Get all basket items
      tags:
          - Basket
      responses:
          '200':
            description: A list of added products
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/BasketItem'
          '401':
            description: Unathorized
          '500':
            description: Server error
  /api/basket/pay:
    post:
      summary: Pay for order
      tags:
        - Basket
      responses:
          '201':
            description: Successfully payed
          '401':
            description: Unathorized
          '404':
            description: Product not found
          '500':
            description: Server error
  /api/basket/add_item:
    post:
      summary: Add item to basket
      tags:
        - Basket
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: string
                quantity:
                  type: string
      responses:
          '201':
            description: Successfully added
          '400':
            description: Bad request
          '401':
            description: Unathorized
          '404':
            description: Product not found
          '500':
            description: Server error
  /api/basket/remove_item:
    post:
      summary: Remove quantity of item
      tags:
        - Basket
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: string
                quantity:
                  type: string
      responses:
          '201':
            description: Successfully removed
          '400':
            description: Bad request
          '401':
            description: Unathorized
          '404':
            description: Product not found
          '500':
            description: Server error
            
            
  /api/basket/clear_basket:
      delete:
        summary: Remove items from basket
        tags:
          - Basket
        responses:
            '201':
              description: Successfully cleared
            '401':
              description: Unathorized
            '500':
              description: Server error
#Schemas

components:
  schemas:
    

    BasketItem:
      type: object
      properties:
        id:
          type: integer
        product_id:
          type: integer
        user_id:
          type: integer
        quantity:
          type: integer
        added_at: 
          type: string
          format: date-time
        product:
            $ref: '#/components/schemas/Product'

    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        password: 
          type: string
          
    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
          format: text
        price:
          type: number
          format: decimal
        quantity:
          type: integer
    







